<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230601 12:08:57.732" rpa="false" schemaversion="3">
<suite id="s1" name="databaseFromDatas" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice\TestCase\databaseFromDatas.robot">
<kw name="Connect To Database" library="DatabaseLibrary" type="SETUP">
<arg>pymysql</arg>
<arg>${DBName}</arg>
<arg>${DBUser}</arg>
<arg>${DBPass}</arg>
<arg>${DBHost}</arg>
<arg>${DBPort}</arg>
<doc>Loads the DB API 2.0 module given `dbapiModuleName` then uses it to
connect to the database using `dbName`, `dbUsername`, and `dbPassword`.</doc>
<msg timestamp="20230601 12:08:57.988" level="INFO">Connecting using : pymysql.connect(db=demo, user=root, passwd=root, host=localhost, port=3306, charset=None) </msg>
<status status="PASS" starttime="20230601 12:08:57.987" endtime="20230601 12:08:58.003"/>
</kw>
<test id="s1-t1" name="Create EmployeeDetails table" line="25">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${output}</var>
<arg>CREATE TABLE EmployeeDetails (empId varChar(255),ename varchar(255),email varchar(255),MobileNo Varchar(255), Result varchar(255));</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20230601 12:08:58.003" level="INFO">Executing : Execute SQL String  |  CREATE TABLE EmployeeDetails (empId varChar(255),ename varchar(255),email varchar(255),MobileNo Varchar(255), Result varchar(255)); </msg>
<msg timestamp="20230601 12:08:58.017" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 12:08:58.003" endtime="20230601 12:08:58.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230601 12:08:58.018" level="INFO">None</msg>
<status status="PASS" starttime="20230601 12:08:58.018" endtime="20230601 12:08:58.018"/>
</kw>
<status status="PASS" starttime="20230601 12:08:58.003" endtime="20230601 12:08:58.019"/>
</test>
<test id="s1-t2" name="Verify Data Insertion in EmployeeDetails table" line="29">
<kw name="Execute Sql Script" library="DatabaseLibrary">
<var>${output}</var>
<arg>C:/Users/UdhayaParanthaman/Downloads/RFW-Practice/TestCase/insert.sql</arg>
<doc>Executes the content of the `sqlScriptFileName` as SQL commands. Useful for setting the database to a known
state before running your tests, or clearing out your test data after running each a test. Set optional input
`sansTran` to True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20230601 12:08:58.021" level="INFO">Executing : Execute SQL Script  |  C:/Users/UdhayaParanthaman/Downloads/RFW-Practice/TestCase/insert.sql </msg>
<msg timestamp="20230601 12:08:58.028" level="INFO">${output} = None</msg>
<status status="PASS" starttime="20230601 12:08:58.021" endtime="20230601 12:08:58.028"/>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<arg>${output}</arg>
<arg>None</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<msg timestamp="20230601 12:08:58.028" level="INFO">Argument types are:
&lt;class 'NoneType'&gt;
&lt;class 'str'&gt;</msg>
<status status="PASS" starttime="20230601 12:08:58.028" endtime="20230601 12:08:58.028"/>
</kw>
<doc>This test case verifies that user is able to insert data in the table successfully</doc>
<status status="PASS" starttime="20230601 12:08:58.021" endtime="20230601 12:08:58.029"/>
</test>
<test id="s1-t3" name="Verify count row" line="34">
<kw name="Execute Sql String" library="DatabaseLibrary">
<var>${rowcount}</var>
<arg>SELECT empId, ename, email, MobileNo, COUNT(*) FROM EmployeeDetails</arg>
<doc>Executes the sqlString as SQL commands. Useful to pass arguments to your sql. Set optional input `sansTran` to
True to run command without an explicit transaction commit or rollback.</doc>
<msg timestamp="20230601 12:08:58.031" level="INFO">Executing : Execute SQL String  |  SELECT empId, ename, email, MobileNo, COUNT(*) FROM EmployeeDetails </msg>
<msg timestamp="20230601 12:08:58.033" level="FAIL">OperationalError: (1140, "In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'demo.EmployeeDetails.empId'; this is incompatible with sql_mode=only_full_group_by")</msg>
<status status="FAIL" starttime="20230601 12:08:58.030" endtime="20230601 12:08:58.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${rowcount}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20230601 12:08:58.077" endtime="20230601 12:08:58.077"/>
</kw>
<status status="FAIL" starttime="20230601 12:08:58.030" endtime="20230601 12:08:58.079">OperationalError: (1140, "In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column 'demo.EmployeeDetails.empId'; this is incompatible with sql_mode=only_full_group_by")</status>
</test>
<kw name="Disconnect From Database" library="DatabaseLibrary" type="TEARDOWN">
<doc>Disconnects from the database.</doc>
<msg timestamp="20230601 12:08:58.081" level="INFO">Executing : Disconnect From Database</msg>
<status status="PASS" starttime="20230601 12:08:58.081" endtime="20230601 12:08:58.081"/>
</kw>
<doc>This file has to verify the format of each data cell</doc>
<status status="FAIL" starttime="20230601 12:08:57.734" endtime="20230601 12:08:58.082"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="1" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" skip="0" id="s1" name="databaseFromDatas">databaseFromDatas</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
