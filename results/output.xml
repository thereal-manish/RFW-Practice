<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230522 12:47:09.197" rpa="false" schemaversion="3">
<suite id="s1" name="RFW-Practice" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice">
<suite id="s1-s1" name="TestCase" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice\TestCase">
<suite id="s1-s1-s1" name="ExcelCellValidation" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice\TestCase\ExcelCellValidation.robot">
<test id="s1-s1-s1-t1" name="Verify format of data from Each cell" line="12">
<kw name="Open Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Open excel file
Arguments:
    | File             | Filename with fullpath to open and test upon        |</doc>
<status status="PASS" starttime="20230522 12:47:09.430" endtime="20230522 12:47:09.446"/>
</kw>
<kw name="Get Row Count" library="ExcelUtil">
<var>${rowCount}</var>
<arg>EmployeeDetails</arg>
<doc>Return the Row count of the given sheet
Example:
| Open Excel      |  C:\Data\ExcelTest.xlsx  |
| Get Row count     |  Sheet1 |</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">${rowCount} = 3</msg>
<status status="PASS" starttime="20230522 12:47:09.446" endtime="20230522 12:47:09.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${rowCount}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">3</msg>
<status status="PASS" starttime="20230522 12:47:09.454" endtime="20230522 12:47:09.454"/>
</kw>
<kw name="Get Column Count" library="ExcelUtil">
<var>${colCount}</var>
<arg>EmployeeDetails</arg>
<doc>Return the column count of the given sheet
Example:
| Open Excel      |  C:\Data\ExcelTest.xlsx  |
| Get Column count     |  Sheet1 |</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">${colCount} = 5</msg>
<status status="PASS" starttime="20230522 12:47:09.454" endtime="20230522 12:47:09.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${colCount}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">5</msg>
<status status="PASS" starttime="20230522 12:47:09.454" endtime="20230522 12:47:09.454"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${data}</var>
<arg>EmployeeDetails</arg>
<arg>2</arg>
<arg>3</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">${data} = abc@gmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.454" endtime="20230522 12:47:09.454"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.454" level="INFO">abc@gmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.454" endtime="20230522 12:47:09.454"/>
</kw>
<for flavor="IN RANGE">
<var>${rowIndex}</var>
<value>2</value>
<value>${rowCount}+1</value>
<iter>
<var name="${rowIndex}">2</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>5</value>
<value>${colCount}+1</value>
<iter>
<var name="${colIndex}">5</var>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${empId}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>1</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.462" level="INFO">${empId} = 987654</msg>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empId}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.462" level="INFO">987654</msg>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.462"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${emp}</var>
<arg>${empId}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230522 12:47:09.462" level="INFO">${emp} = 987654</msg>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.470"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${emp1}</var>
<arg>${emp}</arg>
<arg>^\\d{6}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.470" level="INFO">${emp1} = ['987654']</msg>
<status status="PASS" starttime="20230522 12:47:09.470" endtime="20230522 12:47:09.486"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${emp1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.486" level="INFO">['987654']</msg>
<status status="PASS" starttime="20230522 12:47:09.486" endtime="20230522 12:47:09.497"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${name}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>2</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.502" level="INFO">${name} = udhaya</msg>
<status status="PASS" starttime="20230522 12:47:09.497" endtime="20230522 12:47:09.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.502" level="INFO">udhaya</msg>
<status status="PASS" starttime="20230522 12:47:09.502" endtime="20230522 12:47:09.502"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empName}</var>
<arg>${name}</arg>
<arg>^[A-Za-z]{5,20}$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.502" level="INFO">${empName} = ['udhaya']</msg>
<status status="PASS" starttime="20230522 12:47:09.502" endtime="20230522 12:47:09.502"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">['udhaya']</msg>
<status status="PASS" starttime="20230522 12:47:09.502" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${email}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>3</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">${email} = abc@gmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${email}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">abc@gmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empEmail}</var>
<arg>${email}</arg>
<arg>^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">${empEmail} = ['abc@gmail.com']</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empEmail}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">['abc@gmail.com']</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${mobileNo}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>4</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">${mobileNo} = 1234567891</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${mobileNo}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">1234567891</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${empMobile}</var>
<arg>${mobileNo}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230522 12:47:09.510" level="INFO">${empMobile} = 1234567891</msg>
<status status="PASS" starttime="20230522 12:47:09.510" endtime="20230522 12:47:09.510"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empmobileNo}</var>
<arg>${empMobile}</arg>
<arg>^[0-9]{1,10}$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.518" level="INFO">${empmobileNo} = ['1234567891']</msg>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empmobileNo}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.518" level="INFO">['1234567891']</msg>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${colIndex}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.518" level="INFO">5</msg>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${con}</var>
<arg>${emp1} != [] and ${empName} != [] and ${empEmail} != [] and ${empmobileNo} != []</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230522 12:47:09.518" level="INFO">${con} = True</msg>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${con2}</var>
<arg>${emp1} == [] or ${empName} == [] or ${empEmail} == [] or ${empmobileNo} == []</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230522 12:47:09.518" level="INFO">${con2} = False</msg>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${con}</arg>
<arg>Write Data By Coordinates</arg>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>pass</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.518"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230522 12:47:09.518" endtime="20230522 12:47:09.542"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${con2}</arg>
<arg>Write Data By Coordinates</arg>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230522 12:47:09.542" endtime="20230522 12:47:09.542"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230522 12:47:09.542" endtime="20230522 12:47:09.558"/>
</kw>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.558"/>
</iter>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.558"/>
</for>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.558"/>
</iter>
<iter>
<var name="${rowIndex}">3</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>5</value>
<value>${colCount}+1</value>
<iter>
<var name="${colIndex}">5</var>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${empId}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>1</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.558" level="INFO">${empId} = 765414</msg>
<status status="PASS" starttime="20230522 12:47:09.558" endtime="20230522 12:47:09.558"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empId}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">765414</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${emp}</var>
<arg>${empId}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">${emp} = 765414</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${emp1}</var>
<arg>${emp}</arg>
<arg>^\\d{6}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">${emp1} = ['765414']</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${emp1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">['765414']</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${name}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>2</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">${name} = gous</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${name}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">gous</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empName}</var>
<arg>${name}</arg>
<arg>^[A-Za-z]{5,20}$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">${empName} = []</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empName}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">[]</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${email}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>3</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.566" level="INFO">${email} = gousegmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${email}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">gousegmail.com</msg>
<status status="PASS" starttime="20230522 12:47:09.566" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empEmail}</var>
<arg>${email}</arg>
<arg>^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">${empEmail} = []</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empEmail}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">[]</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${mobileNo}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>4</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">${mobileNo} = 987654267</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${mobileNo}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">987654267</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${empMobile}</var>
<arg>${mobileNo}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">${empMobile} = 987654267</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${empmobileNo}</var>
<arg>${empMobile}</arg>
<arg>^[0-9]{1,10}$</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">${empmobileNo} = ['987654267']</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.574"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${empmobileNo}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.574" level="INFO">['987654267']</msg>
<status status="PASS" starttime="20230522 12:47:09.574" endtime="20230522 12:47:09.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${colIndex}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230522 12:47:09.582" level="INFO">5</msg>
<status status="PASS" starttime="20230522 12:47:09.582" endtime="20230522 12:47:09.582"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${con}</var>
<arg>${emp1} != [] and ${empName} != [] and ${empEmail} != [] and ${empmobileNo} != []</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230522 12:47:09.582" level="INFO">${con} = False</msg>
<status status="PASS" starttime="20230522 12:47:09.582" endtime="20230522 12:47:09.582"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${con2}</var>
<arg>${emp1} == [] or ${empName} == [] or ${empEmail} == [] or ${empmobileNo} == []</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230522 12:47:09.582" level="INFO">${con2} = True</msg>
<status status="PASS" starttime="20230522 12:47:09.582" endtime="20230522 12:47:09.582"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${con}</arg>
<arg>Write Data By Coordinates</arg>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>pass</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20230522 12:47:09.582" endtime="20230522 12:47:09.582"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230522 12:47:09.582" endtime="20230522 12:47:09.590"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${con2}</arg>
<arg>Write Data By Coordinates</arg>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>fail</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230522 12:47:09.590" endtime="20230522 12:47:09.590"/>
</kw>
<status status="PASS" starttime="20230522 12:47:09.590" endtime="20230522 12:47:09.590"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230522 12:47:09.590" endtime="20230522 12:47:09.606"/>
</kw>
<status status="PASS" starttime="20230522 12:47:09.558" endtime="20230522 12:47:09.606"/>
</iter>
<status status="PASS" starttime="20230522 12:47:09.558" endtime="20230522 12:47:09.606"/>
</for>
<status status="PASS" starttime="20230522 12:47:09.558" endtime="20230522 12:47:09.606"/>
</iter>
<status status="PASS" starttime="20230522 12:47:09.462" endtime="20230522 12:47:09.606"/>
</for>
<status status="PASS" starttime="20230522 12:47:09.430" endtime="20230522 12:47:09.606"/>
</test>
<doc>This file has to verify the format of each data cell</doc>
<status status="PASS" starttime="20230522 12:47:09.229" endtime="20230522 12:47:09.606"/>
</suite>
<status status="PASS" starttime="20230522 12:47:09.229" endtime="20230522 12:47:09.606"/>
</suite>
<status status="PASS" starttime="20230522 12:47:09.205" endtime="20230522 12:47:09.614"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="RFW-Practice">RFW-Practice</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="TestCase">RFW-Practice.TestCase</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="ExcelCellValidation">RFW-Practice.TestCase.ExcelCellValidation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
