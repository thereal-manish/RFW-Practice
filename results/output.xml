<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.11.3 on win32)" generated="20230523 13:05:22.632" rpa="false" schemaversion="3">
<suite id="s1" name="RFW-Practice" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice">
<suite id="s1-s1" name="TestCase" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice\TestCase">
<suite id="s1-s1-s1" name="ExcelCellValidation" source="C:\Users\UdhayaParanthaman\Downloads\RFW-Practice\TestCase\ExcelCellValidation.robot">
<test id="s1-s1-s1-t1" name="Verify format of data from Each cell" line="10">
<kw name="Open Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Open excel file
Arguments:
    | File             | Filename with fullpath to open and test upon        |</doc>
<status status="PASS" starttime="20230523 13:05:22.919" endtime="20230523 13:05:22.934"/>
</kw>
<kw name="Get Row Count" library="ExcelUtil">
<var>${rowCount}</var>
<arg>EmployeeDetails</arg>
<doc>Return the Row count of the given sheet
Example:
| Open Excel      |  C:\Data\ExcelTest.xlsx  |
| Get Row count     |  Sheet1 |</doc>
<msg timestamp="20230523 13:05:22.934" level="INFO">${rowCount} = 6</msg>
<status status="PASS" starttime="20230523 13:05:22.934" endtime="20230523 13:05:22.936"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${rowCount}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230523 13:05:22.939" level="INFO">6</msg>
<status status="PASS" starttime="20230523 13:05:22.938" endtime="20230523 13:05:22.939"/>
</kw>
<kw name="Get Column Count" library="ExcelUtil">
<var>${colCount}</var>
<arg>EmployeeDetails</arg>
<doc>Return the column count of the given sheet
Example:
| Open Excel      |  C:\Data\ExcelTest.xlsx  |
| Get Column count     |  Sheet1 |</doc>
<msg timestamp="20230523 13:05:22.941" level="INFO">${colCount} = 5</msg>
<status status="PASS" starttime="20230523 13:05:22.940" endtime="20230523 13:05:22.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${colCount}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20230523 13:05:22.942" level="INFO">5</msg>
<status status="PASS" starttime="20230523 13:05:22.942" endtime="20230523 13:05:22.942"/>
</kw>
<for flavor="IN RANGE">
<var>${rowIndex}</var>
<value>2</value>
<value>${rowCount}+1</value>
<iter>
<var name="${rowIndex}">2</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>1</value>
<value>${colCount}</value>
<iter>
<var name="${colIndex}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${idRegPattern}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:22.946" endtime="20230523 13:05:22.946"/>
</kw>
<msg timestamp="20230523 13:05:22.946" level="INFO">${regex} = ^\d{6}</msg>
<status status="PASS" starttime="20230523 13:05:22.945" endtime="20230523 13:05:22.947"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:22.948" level="INFO">${Data} = 987654</msg>
<status status="PASS" starttime="20230523 13:05:22.947" endtime="20230523 13:05:22.948"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:22.948" level="INFO">${cellData} = 987654</msg>
<status status="PASS" starttime="20230523 13:05:22.948" endtime="20230523 13:05:22.948"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:22.949" level="INFO">${matches} = ['987654']</msg>
<status status="PASS" starttime="20230523 13:05:22.948" endtime="20230523 13:05:22.949"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.949" endtime="20230523 13:05:22.950"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.950" endtime="20230523 13:05:22.950"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:22.950" endtime="20230523 13:05:22.950"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:22.949" endtime="20230523 13:05:22.950"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:22.950" endtime="20230523 13:05:22.951"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:22.951" endtime="20230523 13:05:22.970"/>
</kw>
<status status="PASS" starttime="20230523 13:05:22.950" endtime="20230523 13:05:22.971"/>
</branch>
<status status="PASS" starttime="20230523 13:05:22.949" endtime="20230523 13:05:22.971"/>
</if>
<status status="PASS" starttime="20230523 13:05:22.944" endtime="20230523 13:05:22.971"/>
</iter>
<iter>
<var name="${colIndex}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${nameRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:22.972" endtime="20230523 13:05:22.973"/>
</kw>
<msg timestamp="20230523 13:05:22.973" level="INFO">${regex} = ^[A-Za-z ]{5,20}$</msg>
<status status="PASS" starttime="20230523 13:05:22.972" endtime="20230523 13:05:22.973"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:22.974" level="INFO">${Data} = udhaya</msg>
<status status="PASS" starttime="20230523 13:05:22.973" endtime="20230523 13:05:22.974"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:22.974" level="INFO">${cellData} = udhaya</msg>
<status status="PASS" starttime="20230523 13:05:22.974" endtime="20230523 13:05:22.974"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:22.975" level="INFO">${matches} = ['udhaya']</msg>
<status status="PASS" starttime="20230523 13:05:22.974" endtime="20230523 13:05:22.975"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.975" endtime="20230523 13:05:22.975"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.975" endtime="20230523 13:05:22.975"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:22.976" endtime="20230523 13:05:22.976"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:22.975" endtime="20230523 13:05:22.976"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:22.976" endtime="20230523 13:05:22.976"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:22.976" endtime="20230523 13:05:22.984"/>
</kw>
<status status="PASS" starttime="20230523 13:05:22.976" endtime="20230523 13:05:22.984"/>
</branch>
<status status="PASS" starttime="20230523 13:05:22.975" endtime="20230523 13:05:22.984"/>
</if>
<status status="PASS" starttime="20230523 13:05:22.971" endtime="20230523 13:05:22.984"/>
</iter>
<iter>
<var name="${colIndex}">3</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${emailRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:22.986" endtime="20230523 13:05:22.987"/>
</kw>
<msg timestamp="20230523 13:05:22.987" level="INFO">${regex} = ^[a-zA-Z0-9_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$</msg>
<status status="PASS" starttime="20230523 13:05:22.984" endtime="20230523 13:05:22.987"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:22.989" level="INFO">${Data} = abc@gmail.com</msg>
<status status="PASS" starttime="20230523 13:05:22.988" endtime="20230523 13:05:22.990"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:22.990" level="INFO">${cellData} = abc@gmail.com</msg>
<status status="PASS" starttime="20230523 13:05:22.990" endtime="20230523 13:05:22.990"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:22.991" level="INFO">${matches} = ['abc@gmail.com']</msg>
<status status="PASS" starttime="20230523 13:05:22.991" endtime="20230523 13:05:22.992"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.992" endtime="20230523 13:05:22.993"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:22.993" endtime="20230523 13:05:22.993"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:22.993" endtime="20230523 13:05:22.993"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:22.992" endtime="20230523 13:05:22.994"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:22.994" endtime="20230523 13:05:22.994"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:22.995" endtime="20230523 13:05:23.001"/>
</kw>
<status status="PASS" starttime="20230523 13:05:22.994" endtime="20230523 13:05:23.001"/>
</branch>
<status status="PASS" starttime="20230523 13:05:22.992" endtime="20230523 13:05:23.001"/>
</if>
<status status="PASS" starttime="20230523 13:05:22.984" endtime="20230523 13:05:23.001"/>
</iter>
<iter>
<var name="${colIndex}">4</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${mobileNoRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.003" endtime="20230523 13:05:23.004"/>
</kw>
<msg timestamp="20230523 13:05:23.004" level="INFO">${regex} = ^[0-9]{10}$</msg>
<status status="PASS" starttime="20230523 13:05:23.003" endtime="20230523 13:05:23.004"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.005" level="INFO">${Data} = 1234567891</msg>
<status status="PASS" starttime="20230523 13:05:23.005" endtime="20230523 13:05:23.005"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.006" level="INFO">${cellData} = 1234567891</msg>
<status status="PASS" starttime="20230523 13:05:23.006" endtime="20230523 13:05:23.006"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.007" level="INFO">${matches} = ['1234567891']</msg>
<status status="PASS" starttime="20230523 13:05:23.007" endtime="20230523 13:05:23.007"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.008" endtime="20230523 13:05:23.008"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.008" endtime="20230523 13:05:23.009"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.009" endtime="20230523 13:05:23.009"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.007" endtime="20230523 13:05:23.009"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.009" endtime="20230523 13:05:23.010"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.010" endtime="20230523 13:05:23.017"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.009" endtime="20230523 13:05:23.017"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.007" endtime="20230523 13:05:23.017"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.001" endtime="20230523 13:05:23.017"/>
</iter>
<status status="PASS" starttime="20230523 13:05:22.944" endtime="20230523 13:05:23.017"/>
</for>
<status status="PASS" starttime="20230523 13:05:22.944" endtime="20230523 13:05:23.017"/>
</iter>
<iter>
<var name="${rowIndex}">3</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>1</value>
<value>${colCount}</value>
<iter>
<var name="${colIndex}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${idRegPattern}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.017" endtime="20230523 13:05:23.019"/>
</kw>
<msg timestamp="20230523 13:05:23.019" level="INFO">${regex} = ^\d{6}</msg>
<status status="PASS" starttime="20230523 13:05:23.017" endtime="20230523 13:05:23.019"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.020" level="INFO">${Data} = 33571</msg>
<status status="PASS" starttime="20230523 13:05:23.019" endtime="20230523 13:05:23.021"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.021" level="INFO">${cellData} = 33571</msg>
<status status="PASS" starttime="20230523 13:05:23.021" endtime="20230523 13:05:23.021"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.022" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230523 13:05:23.022" endtime="20230523 13:05:23.022"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.023" endtime="20230523 13:05:23.024"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.024" endtime="20230523 13:05:23.030"/>
</kw>
<break>
<status status="PASS" starttime="20230523 13:05:23.031" endtime="20230523 13:05:23.031"/>
</break>
<status status="PASS" starttime="20230523 13:05:23.022" endtime="20230523 13:05:23.031"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.031" endtime="20230523 13:05:23.031"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.032" endtime="20230523 13:05:23.032"/>
</kw>
<status status="NOT RUN" starttime="20230523 13:05:23.031" endtime="20230523 13:05:23.032"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.022" endtime="20230523 13:05:23.032"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.017" endtime="20230523 13:05:23.032"/>
</iter>
<status status="PASS" starttime="20230523 13:05:23.017" endtime="20230523 13:05:23.032"/>
</for>
<status status="PASS" starttime="20230523 13:05:23.017" endtime="20230523 13:05:23.032"/>
</iter>
<iter>
<var name="${rowIndex}">4</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>1</value>
<value>${colCount}</value>
<iter>
<var name="${colIndex}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${idRegPattern}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.033" endtime="20230523 13:05:23.033"/>
</kw>
<msg timestamp="20230523 13:05:23.033" level="INFO">${regex} = ^\d{6}</msg>
<status status="PASS" starttime="20230523 13:05:23.033" endtime="20230523 13:05:23.033"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.034" level="INFO">${Data} = 335671</msg>
<status status="PASS" starttime="20230523 13:05:23.033" endtime="20230523 13:05:23.034"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.034" level="INFO">${cellData} = 335671</msg>
<status status="PASS" starttime="20230523 13:05:23.034" endtime="20230523 13:05:23.034"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.036" level="INFO">${matches} = ['335671']</msg>
<status status="PASS" starttime="20230523 13:05:23.034" endtime="20230523 13:05:23.036"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.037" endtime="20230523 13:05:23.037"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.037" endtime="20230523 13:05:23.038"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.038" endtime="20230523 13:05:23.038"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.036" endtime="20230523 13:05:23.038"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.038" endtime="20230523 13:05:23.039"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.039" endtime="20230523 13:05:23.056"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.038" endtime="20230523 13:05:23.056"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.036" endtime="20230523 13:05:23.056"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.032" endtime="20230523 13:05:23.056"/>
</iter>
<iter>
<var name="${colIndex}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${nameRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.057" endtime="20230523 13:05:23.057"/>
</kw>
<msg timestamp="20230523 13:05:23.057" level="INFO">${regex} = ^[A-Za-z ]{5,20}$</msg>
<status status="PASS" starttime="20230523 13:05:23.057" endtime="20230523 13:05:23.057"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.059" level="INFO">${Data} = Dini</msg>
<status status="PASS" starttime="20230523 13:05:23.057" endtime="20230523 13:05:23.059"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.059" level="INFO">${cellData} = Dini</msg>
<status status="PASS" starttime="20230523 13:05:23.059" endtime="20230523 13:05:23.059"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.059" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230523 13:05:23.059" endtime="20230523 13:05:23.060"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.060" endtime="20230523 13:05:23.060"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.060" endtime="20230523 13:05:23.069"/>
</kw>
<break>
<status status="PASS" starttime="20230523 13:05:23.070" endtime="20230523 13:05:23.070"/>
</break>
<status status="PASS" starttime="20230523 13:05:23.060" endtime="20230523 13:05:23.070"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.071" endtime="20230523 13:05:23.071"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.071" endtime="20230523 13:05:23.071"/>
</kw>
<status status="NOT RUN" starttime="20230523 13:05:23.070" endtime="20230523 13:05:23.071"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.060" endtime="20230523 13:05:23.071"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.057" endtime="20230523 13:05:23.071"/>
</iter>
<status status="PASS" starttime="20230523 13:05:23.032" endtime="20230523 13:05:23.071"/>
</for>
<status status="PASS" starttime="20230523 13:05:23.032" endtime="20230523 13:05:23.071"/>
</iter>
<iter>
<var name="${rowIndex}">5</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>1</value>
<value>${colCount}</value>
<iter>
<var name="${colIndex}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${idRegPattern}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.073" endtime="20230523 13:05:23.073"/>
</kw>
<msg timestamp="20230523 13:05:23.073" level="INFO">${regex} = ^\d{6}</msg>
<status status="PASS" starttime="20230523 13:05:23.072" endtime="20230523 13:05:23.073"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.073" level="INFO">${Data} = 112418</msg>
<status status="PASS" starttime="20230523 13:05:23.073" endtime="20230523 13:05:23.074"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.074" level="INFO">${cellData} = 112418</msg>
<status status="PASS" starttime="20230523 13:05:23.074" endtime="20230523 13:05:23.074"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.074" level="INFO">${matches} = ['112418']</msg>
<status status="PASS" starttime="20230523 13:05:23.074" endtime="20230523 13:05:23.075"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.075" endtime="20230523 13:05:23.075"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.075" endtime="20230523 13:05:23.075"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.075" endtime="20230523 13:05:23.075"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.075" endtime="20230523 13:05:23.075"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.076" endtime="20230523 13:05:23.076"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.076" endtime="20230523 13:05:23.084"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.076" endtime="20230523 13:05:23.084"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.075" endtime="20230523 13:05:23.084"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.072" endtime="20230523 13:05:23.084"/>
</iter>
<iter>
<var name="${colIndex}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${nameRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.084" endtime="20230523 13:05:23.084"/>
</kw>
<msg timestamp="20230523 13:05:23.084" level="INFO">${regex} = ^[A-Za-z ]{5,20}$</msg>
<status status="PASS" starttime="20230523 13:05:23.084" endtime="20230523 13:05:23.084"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.091" level="INFO">${Data} = Sanjai</msg>
<status status="PASS" starttime="20230523 13:05:23.086" endtime="20230523 13:05:23.091"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.092" level="INFO">${cellData} = Sanjai</msg>
<status status="PASS" starttime="20230523 13:05:23.091" endtime="20230523 13:05:23.092"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.093" level="INFO">${matches} = ['Sanjai']</msg>
<status status="PASS" starttime="20230523 13:05:23.093" endtime="20230523 13:05:23.093"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.094" endtime="20230523 13:05:23.094"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.094" endtime="20230523 13:05:23.095"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.095" endtime="20230523 13:05:23.095"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.093" endtime="20230523 13:05:23.095"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.096" endtime="20230523 13:05:23.096"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.096" endtime="20230523 13:05:23.104"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.095" endtime="20230523 13:05:23.105"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.093" endtime="20230523 13:05:23.105"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.084" endtime="20230523 13:05:23.105"/>
</iter>
<iter>
<var name="${colIndex}">3</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${emailRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.106" endtime="20230523 13:05:23.106"/>
</kw>
<msg timestamp="20230523 13:05:23.106" level="INFO">${regex} = ^[a-zA-Z0-9_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$</msg>
<status status="PASS" starttime="20230523 13:05:23.105" endtime="20230523 13:05:23.106"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.107" level="INFO">${Data} = sanjaigmail.com</msg>
<status status="PASS" starttime="20230523 13:05:23.106" endtime="20230523 13:05:23.107"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.107" level="INFO">${cellData} = sanjaigmail.com</msg>
<status status="PASS" starttime="20230523 13:05:23.107" endtime="20230523 13:05:23.107"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.108" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230523 13:05:23.107" endtime="20230523 13:05:23.108"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.108" endtime="20230523 13:05:23.108"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.108" endtime="20230523 13:05:23.116"/>
</kw>
<break>
<status status="PASS" starttime="20230523 13:05:23.116" endtime="20230523 13:05:23.116"/>
</break>
<status status="PASS" starttime="20230523 13:05:23.108" endtime="20230523 13:05:23.116"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.116" endtime="20230523 13:05:23.117"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.117" endtime="20230523 13:05:23.117"/>
</kw>
<status status="NOT RUN" starttime="20230523 13:05:23.116" endtime="20230523 13:05:23.117"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.108" endtime="20230523 13:05:23.117"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.105" endtime="20230523 13:05:23.117"/>
</iter>
<status status="PASS" starttime="20230523 13:05:23.072" endtime="20230523 13:05:23.117"/>
</for>
<status status="PASS" starttime="20230523 13:05:23.072" endtime="20230523 13:05:23.117"/>
</iter>
<iter>
<var name="${rowIndex}">6</var>
<for flavor="IN RANGE">
<var>${colIndex}</var>
<value>1</value>
<value>${colCount}</value>
<iter>
<var name="${colIndex}">1</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${idRegPattern}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.118" endtime="20230523 13:05:23.118"/>
</kw>
<msg timestamp="20230523 13:05:23.118" level="INFO">${regex} = ^\d{6}</msg>
<status status="PASS" starttime="20230523 13:05:23.118" endtime="20230523 13:05:23.118"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.119" level="INFO">${Data} = 765414</msg>
<status status="PASS" starttime="20230523 13:05:23.118" endtime="20230523 13:05:23.119"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.119" level="INFO">${cellData} = 765414</msg>
<status status="PASS" starttime="20230523 13:05:23.119" endtime="20230523 13:05:23.120"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.120" level="INFO">${matches} = ['765414']</msg>
<status status="PASS" starttime="20230523 13:05:23.120" endtime="20230523 13:05:23.121"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.121" endtime="20230523 13:05:23.121"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.121" endtime="20230523 13:05:23.122"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.122" endtime="20230523 13:05:23.122"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.121" endtime="20230523 13:05:23.122"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.122" endtime="20230523 13:05:23.122"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.122" endtime="20230523 13:05:23.131"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.122" endtime="20230523 13:05:23.132"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.121" endtime="20230523 13:05:23.132"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.118" endtime="20230523 13:05:23.132"/>
</iter>
<iter>
<var name="${colIndex}">2</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${nameRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.133" endtime="20230523 13:05:23.134"/>
</kw>
<msg timestamp="20230523 13:05:23.134" level="INFO">${regex} = ^[A-Za-z ]{5,20}$</msg>
<status status="PASS" starttime="20230523 13:05:23.133" endtime="20230523 13:05:23.134"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.135" level="INFO">${Data} = gouse</msg>
<status status="PASS" starttime="20230523 13:05:23.134" endtime="20230523 13:05:23.135"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.137" level="INFO">${cellData} = gouse</msg>
<status status="PASS" starttime="20230523 13:05:23.136" endtime="20230523 13:05:23.137"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.137" level="INFO">${matches} = ['gouse']</msg>
<status status="PASS" starttime="20230523 13:05:23.137" endtime="20230523 13:05:23.138"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.139" endtime="20230523 13:05:23.139"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.139" endtime="20230523 13:05:23.139"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.139" endtime="20230523 13:05:23.139"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.138" endtime="20230523 13:05:23.139"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.140" endtime="20230523 13:05:23.140"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.141" endtime="20230523 13:05:23.147"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.139" endtime="20230523 13:05:23.147"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.138" endtime="20230523 13:05:23.147"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.132" endtime="20230523 13:05:23.147"/>
</iter>
<iter>
<var name="${colIndex}">3</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${emailRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.148" endtime="20230523 13:05:23.149"/>
</kw>
<msg timestamp="20230523 13:05:23.149" level="INFO">${regex} = ^[a-zA-Z0-9_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$</msg>
<status status="PASS" starttime="20230523 13:05:23.148" endtime="20230523 13:05:23.149"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.150" level="INFO">${Data} = gouse@gmail.com</msg>
<status status="PASS" starttime="20230523 13:05:23.149" endtime="20230523 13:05:23.150"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.151" level="INFO">${cellData} = gouse@gmail.com</msg>
<status status="PASS" starttime="20230523 13:05:23.150" endtime="20230523 13:05:23.152"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.154" level="INFO">${matches} = ['gouse@gmail.com']</msg>
<status status="PASS" starttime="20230523 13:05:23.152" endtime="20230523 13:05:23.154"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.156" endtime="20230523 13:05:23.156"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.156" endtime="20230523 13:05:23.157"/>
</kw>
<break>
<status status="NOT RUN" starttime="20230523 13:05:23.157" endtime="20230523 13:05:23.157"/>
</break>
<status status="NOT RUN" starttime="20230523 13:05:23.155" endtime="20230523 13:05:23.157"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.157" endtime="20230523 13:05:23.157"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.157" endtime="20230523 13:05:23.164"/>
</kw>
<status status="PASS" starttime="20230523 13:05:23.157" endtime="20230523 13:05:23.164"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.155" endtime="20230523 13:05:23.164"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.148" endtime="20230523 13:05:23.164"/>
</iter>
<iter>
<var name="${colIndex}">4</var>
<kw name="Run Keyword If" library="BuiltIn">
<var>${regex}</var>
<arg>${colIndex} == 1</arg>
<arg>Set Variable</arg>
<arg>${idRegPattern}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '2'</arg>
<arg>Set Variable</arg>
<arg>${nameRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '3'</arg>
<arg>Set Variable</arg>
<arg>${emailRegExp}</arg>
<arg>ELSE IF</arg>
<arg>'${colIndex}' == '4'</arg>
<arg>Set Variable</arg>
<arg>${mobileNoRegExp}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${mobileNoRegExp}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20230523 13:05:23.165" endtime="20230523 13:05:23.165"/>
</kw>
<msg timestamp="20230523 13:05:23.165" level="INFO">${regex} = ^[0-9]{10}$</msg>
<status status="PASS" starttime="20230523 13:05:23.165" endtime="20230523 13:05:23.166"/>
</kw>
<kw name="Read Cell Data By Coordinates" library="ExcelUtil">
<var>${Data}</var>
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colIndex}</arg>
<doc>Return the value of a cell by giving the sheetname, row value &amp; column value
Example:
| Read Cell Data By Coordinates     |  SheetName | Row Number |  Column Number  |
| Read Cell Data By Coordinates     |  Sheet1 |  1  |  1  |
 To pass integer arguments
| Read Cell Data By Coordinates     |  Sheet1 |  ${1}  |  ${3}  |</doc>
<msg timestamp="20230523 13:05:23.166" level="INFO">${Data} = 987654267</msg>
<status status="PASS" starttime="20230523 13:05:23.166" endtime="20230523 13:05:23.166"/>
</kw>
<kw name="Convert To String" library="BuiltIn">
<var>${cellData}</var>
<arg>${Data}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20230523 13:05:23.167" level="INFO">${cellData} = 987654267</msg>
<status status="PASS" starttime="20230523 13:05:23.166" endtime="20230523 13:05:23.168"/>
</kw>
<kw name="Get Regexp Matches" library="String">
<var>${matches}</var>
<arg>${cellData}</arg>
<arg>${regex}</arg>
<doc>Returns a list of all non-overlapping matches in the given string.</doc>
<msg timestamp="20230523 13:05:23.168" level="INFO">${matches} = []</msg>
<status status="PASS" starttime="20230523 13:05:23.168" endtime="20230523 13:05:23.168"/>
</kw>
<if>
<branch type="IF" condition="${matches} == [ ]">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>fail</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="PASS" starttime="20230523 13:05:23.168" endtime="20230523 13:05:23.168"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="PASS" starttime="20230523 13:05:23.168" endtime="20230523 13:05:23.177"/>
</kw>
<break>
<status status="PASS" starttime="20230523 13:05:23.178" endtime="20230523 13:05:23.178"/>
</break>
<status status="PASS" starttime="20230523 13:05:23.168" endtime="20230523 13:05:23.178"/>
</branch>
<branch type="ELSE">
<kw name="Write Data By Coordinates" library="ExcelUtil">
<arg>EmployeeDetails</arg>
<arg>${rowIndex}</arg>
<arg>${colCount}</arg>
<arg>pass</arg>
<doc>Write the value to a call using its co-ordinates
Example:
| Write Data By Coordinates    |  SheetName  | Row Number | Column Number |  Data  |
| Write Data By Coordinates    | Sheet1 | 1 | 1 |  TestData  |</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.178" endtime="20230523 13:05:23.178"/>
</kw>
<kw name="Save Excel" library="ExcelUtil">
<arg>EmployeeDatas.xlsx</arg>
<doc>Save the excel file after writing the data.
Example:
Update existing file:</doc>
<status status="NOT RUN" starttime="20230523 13:05:23.179" endtime="20230523 13:05:23.179"/>
</kw>
<status status="NOT RUN" starttime="20230523 13:05:23.178" endtime="20230523 13:05:23.179"/>
</branch>
<status status="PASS" starttime="20230523 13:05:23.168" endtime="20230523 13:05:23.179"/>
</if>
<status status="PASS" starttime="20230523 13:05:23.164" endtime="20230523 13:05:23.179"/>
</iter>
<status status="PASS" starttime="20230523 13:05:23.117" endtime="20230523 13:05:23.179"/>
</for>
<status status="PASS" starttime="20230523 13:05:23.117" endtime="20230523 13:05:23.179"/>
</iter>
<status status="PASS" starttime="20230523 13:05:22.943" endtime="20230523 13:05:23.179"/>
</for>
<status status="PASS" starttime="20230523 13:05:22.917" endtime="20230523 13:05:23.180"/>
</test>
<doc>This file has to verify the format of each data cell</doc>
<status status="PASS" starttime="20230523 13:05:22.664" endtime="20230523 13:05:23.182"/>
</suite>
<status status="PASS" starttime="20230523 13:05:22.659" endtime="20230523 13:05:23.186"/>
</suite>
<status status="PASS" starttime="20230523 13:05:22.636" endtime="20230523 13:05:23.189"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="RFW-Practice">RFW-Practice</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="TestCase">RFW-Practice.TestCase</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="ExcelCellValidation">RFW-Practice.TestCase.ExcelCellValidation</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
